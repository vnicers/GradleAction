description = '管理控制台'

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

dependencies {
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

}

gretty {
    httpPort = 9090
    contextPath = '/'

    // supported values:
    // 'jetty7', 'jetty8', 'jetty9', 'jetty93', 'jetty94', 'tomcat7', 'tomcat8'
    servletContainer = 'tomcat8'
}

class ProjectVersion {
    Integer major
    Integer minor
    Boolean release

    ProjectVersion(Integer major, Integer minor) {
        this.major = major
        this.minor = minor
        this.release = Boolean.FALSE
    }


    ProjectVersion(Integer major, Integer minor, Boolean release) {
        this(major, minor)
        this.release = release
    }

    @Override
    String toString() {
        "$major.$minor${release ? '-RELEASE' : '-SNAPSHOT'}"
    }
}

ext.versionFile = file('version.properties')

task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion() {
    logger.quiet('Reading the version.properties')
    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exits :$versionFile.canonicalPath")
    }

    Properties versionProps = new Properties()

    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }
    new ProjectVersion(versionProps.major.toInteger(),
            versionProps.minor.toInteger(), versionProps.release.toBoolean())
}

class ReleaseVersionTask extends DefaultTask {
    @Input
    Boolean release
    @OutputFile
    File destFile

    ReleaseVersionTask() {
        group = 'version'
        description = 'Makes project a release version'
    }

    @TaskAction
    void start() {
        project.version.release = true

        ant.propertyfile(file: destFile) {
            entry(key: 'release', type: 'string', operation: '=', value: 'true')
        }
        logger.quiet "Version: ${project.version}"
    }
}

task printVersion {
    group 'version'

    doLast {
        logger.quiet "Version: $version"
    }
}

task makeRelease(type: ReleaseVersionTask) {
    release = version.release
    destFile = versionFile
}

